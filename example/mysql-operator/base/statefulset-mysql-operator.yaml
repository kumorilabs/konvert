apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: mysql-operator
  name: mysql-operator
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: mysql-operator
  serviceName: mysql-operator-orc
  template:
    metadata:
      annotations:
        checksum/config: 0728c31a378a32b09e3a0e72611f4a3bb3ee5720c1ff9bdd2fc719ae28234ed9
        checksum/secret: 3d59f35d8cf2caa3651f0e50361fb6abd11bc3535c2d288e6fc69ca246c06b91
      labels:
        app: mysql-operator
    spec:
      affinity: null
      containers:
      - args:
        - --leader-election-namespace=mysql-operator
        - --orchestrator-uri=http://127.0.0.1:3000/api
        - --sidecar-image=quay.io/presslabs/mysql-operator-sidecar:0.4.0
        env:
        - name: ORC_TOPOLOGY_USER
          valueFrom:
            secretKeyRef:
              key: TOPOLOGY_USER
              name: mysql-operator-orc
        - name: ORC_TOPOLOGY_PASSWORD
          valueFrom:
            secretKeyRef:
              key: TOPOLOGY_PASSWORD
              name: mysql-operator-orc
        image: quay.io/presslabs/mysql-operator:0.4.0
        imagePullPolicy: IfNotPresent
        name: operator
        resources: {}
      - env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        envFrom:
        - prefix: ORC_
          secretRef:
            name: mysql-operator-orc
        image: quay.io/presslabs/mysql-operator-orchestrator:0.4.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/lb-check
            port: 3000
          initialDelaySeconds: 200
          timeoutSeconds: 10
        name: orchestrator
        ports:
        - containerPort: 3000
          name: web
          protocol: TCP
        - containerPort: 10008
          name: raft
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /api/raft-health
            port: 3000
          timeoutSeconds: 10
        resources: null
        volumeMounts:
        - mountPath: /var/lib/orchestrator/
          name: data
        - mountPath: /templates/
          name: config
      securityContext:
        fsGroup: 777
      serviceAccountName: mysql-operator
      volumes:
      - configMap:
          name: mysql-operator-orc
        name: config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
